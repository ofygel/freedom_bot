import { Telegraf, Markup, Context } from 'telegraf';

export default function startCommand(bot: Telegraf) {
  bot.start(async (ctx) => {
    await ctx.reply(
      '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å üëã\n–°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç–∞–≤–æ–∫ –≤ –ê–ª–º–∞—Ç—ã. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å.',
      Markup.keyboard([
        ['–ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É'],
        ['–°—Ç–∞—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º']
      ]).oneTime().resize()
    );
  });

  const requestContact = async (ctx: Context) => {
    await ctx.reply(
      '–ù—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.',
      Markup.keyboard([
        [Markup.button.contactRequest('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º')]
      ]).oneTime().resize()
    );
  };

  bot.hears('–ó–∞–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É', requestContact);
  bot.hears('–°—Ç–∞—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º', requestContact);

  bot.on('contact', async (ctx) => {
    await ctx.reply('–°–ø–∞—Å–∏–±–æ! –ö–æ–Ω—Ç–∞–∫—Ç –ø–æ–ª—É—á–µ–Ω.');
  });
}
